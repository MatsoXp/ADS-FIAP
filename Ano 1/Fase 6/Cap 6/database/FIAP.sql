--CADASTRAR META
INSERT INTO T_META
    (ID_META, T_USUARIO_NR_CPF, DS_META, DS_VALOR, DT_INICIO, DT_TERMINO)
VALUES
    (792,
    4444444444,
    'COMPRAR UMA FERRARI',
    999444.25,
    TO_DATE('29/12/2022', 'DD/MM/YYYY'),
    TO_DATE('01/01/2026', 'DD/MM/YYYY')
    );


--CADASTRO DESCRICAO INVESTIMENTO
INSERT INTO T_INVTO_DS
    (CD_INVTO, DS_INVTO)
VALUES
    (6,
    'CRA'
    );
    
--CADASTRO INVESTIMENTO Cadastrar os dados para investimentos.
INSERT INTO T_INVTO
    (ID_INVTO, T_USUARIO_NR_CPF, T_INVTO_DS_CD_INVTO, DS_VALOR, DT_APLICACAO, DT_VENCIMENTO, DT_RESGATE)
VALUES
    (11,
    4444444444,
    3,
    325422.00,
    TO_DATE('12/10/2021', 'DD/MM/YYYY'),
    TO_DATE('01/01/2016', 'DD/MM/YYYY'),
    TO_DATE('01/01/2025', 'DD/MM/YYYY')
    );
    
--EXIBE A MOVIMENTACAO E O INVESTIMENTO MAIS RECENTE
SELECT *
FROM T_INVTO, T_MOV
WHERE DT_APLICACAO = (SELECT MAX(DT_APLICACAO) FROM T_INVTO WHERE T_USUARIO_NR_CPF = 4444444444) AND DT_DATA = (SELECT MAX(DT_DATA) FROM T_MOV WHERE T_USUARIO_NR_CPF = 4444444444)
ORDER BY DT_APLICACAO DESC
    
--***********************************************************************************************************************************************************************--
--Consultar os dados básicos de um usuário, o último investimento registrado e a última despesa registrada (filtrar a partir do código de usuário – consulta necessária para o dashboard. Dica: veja consulta com junções).
SELECT NR_CPF, DS_EMAIL, NM_PESSOA, DT_NASCIMENTO, ID_INVTO, T_INVTO.DS_VALOR AS DS_VALOR, DT_APLICACAO, DT_VENCIMENTO, DT_RESGATE, ID_MOV, DS_MOV, DT_DATA, T_MOV.DS_VALOR AS DS_VALOR
FROM T_USUARIO, T_MOV, T_INVTO
WHERE NR_CPF = 1111111111 
AND ID_MOV = (SELECT MAX(ID_MOV) FROM T_MOV WHERE T_USUARIO_NR_CPF = 1111111111)
AND ID_INVTO = (SELECT MAX(ID_INVTO) FROM T_INVTO WHERE T_USUARIO_NR_CPF = 1111111111)

--MESMO COMANDO DO DE CIMA
SELECT NR_CPF, DS_EMAIL, NM_PESSOA, DT_NASCIMENTO, ID_INVTO, T_INVTO.DS_VALOR AS DS_VALOR, DT_APLICACAO, DT_VENCIMENTO, DT_RESGATE, ID_MOV, DS_MOV, DT_DATA, T_MOV.DS_VALOR AS DS_VALOR
FROM T_USUARIO
FULL OUTER JOIN T_MOV ON (NR_CPF = T_MOV.T_USUARIO_NR_CPF)
FULL OUTER JOIN T_INVTO ON (NR_CPF = T_INVTO.T_USUARIO_NR_CPF)
WHERE ID_MOV = (SELECT MAX(ID_MOV) FROM T_MOV WHERE T_USUARIO_NR_CPF = 1111111111) AND ID_INVTO = (SELECT MAX(ID_INVTO) FROM T_INVTO WHERE T_USUARIO_NR_CPF = 1111111111)



--Consultar os dados de todos os registros de investimentos de um  usuário, ordenando-os dos registros mais recentes para os mais antigos (filtrar a partir do seu código).
SELECT ID_INVTO, T_INVTO_DS_CD_INVTO, DS_VALOR, DT_APLICACAO, DT_VENCIMENTO, DT_RESGATE
FROM T_INVTO
WHERE T_USUARIO_NR_CPF = 4444444444
ORDER BY dt_aplicacao DESC;


--Consultar os dados de todos os registros de despesas de um  usuário, ordenando-os dos registros mais recentes para os mais antigos (filtrar a partir do seu código).
SELECT DS_MOV, DT_DATA, DS_VALOR FROM T_MOV
WHERE T_USUARIO_NR_CPF = 1111111111 AND T_CTG_MOV_CD_CTG_MOV = 2
ORDER BY dt_data DESC;

--Consultar os dados de um único registro de investimento de um  usuário (filtrar a partir do código do usuário e do código de investimento.
SELECT T_INVTO_DS_CD_INVTO, DS_VALOR, DT_APLICACAO, DT_VENCIMENTO, DT_RESGATE
FROM T_INVTO
WHERE T_USUARIO_NR_CPF = 1111111111 AND ID_INVTO = 1;
    
--Alterar todos os dados para investimentos do usuário, utilizando o código como referência. // ADICIONAR MAIS COLUNAS NO SET
UPDATE T_INVTO
SET DS_VALOR = 346.22
WHERE ID_INVTO = 1;


--Alterar todos os dados das receitas do usuário, utilizando o código como referência.
--Alterar todos os dados das despesas do usuário, utilizando o código como referência.
--ADICIONAR MAIS COLUNAS CASO QUEIRA ALTERAR MAIS DADOS
UPDATE T_MOV
SET DS_VALOR = 25.22
WHERE ID_MOV = 1;

--Consultar os dados de um único registro de despesa de um  usuário (filtrar a partir do código do usuário e do código da despesa).
SELECT DS_MOV, DT_DATA, DS_VALOR
FROM T_MOV
WHERE T_USUARIO_NR_CPF = 1111111111 AND ID_MOV = 1 AND T_CTG_MOV_CD_CTG_MOV = 2;

--Consultar os dados de um usuário (filtrar a partir do seu código).<-INSERIR O CPF
SELECT * 
FROM T_USUARIO
WHERE NR_CPF = 1111111111;


--Alterar todos os dados do usuário, utilizando seu código como referência.
UPDATE T_USUARIO
    SET NR_CPF=2222222222
WHERE NR_CPF=22222222222;


--***********************************************************************************************************************************************************************--

--SCRIPT DE CRIAÇÃO DAS TABELAS
/*
-- Generated by Oracle SQL Developer Data Modeler 21.4.2.059.0838
--   at:        2022-10-16 19:19:25 BRT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE t_ctg_mov (
    cd_ctg_mov NUMBER(2) NOT NULL,
    ds_ctg_mov VARCHAR2(30) NOT NULL
);

ALTER TABLE t_ctg_mov ADD CONSTRAINT t_ctg_mov_pk PRIMARY KEY ( cd_ctg_mov );

ALTER TABLE t_ctg_mov ADD CONSTRAINT un_ctg_mov_ds_ctg_mov UNIQUE ( ds_ctg_mov );

CREATE TABLE t_invto (
    id_invto            NUMBER(3) NOT NULL,
    t_usuario_nr_cpf    NUMBER(11) NOT NULL,
    t_invto_ds_cd_invto NUMBER(2) NOT NULL,
    ds_valor            NUMBER(10, 2) NOT NULL,
    dt_aplicacao        DATE NOT NULL,
    dt_vencimento       DATE,
    dt_resgate          DATE
);

ALTER TABLE t_invto ADD CONSTRAINT t_invto_pk PRIMARY KEY ( id_invto );

CREATE TABLE t_invto_ds (
    cd_invto NUMBER(2) NOT NULL,
    ds_invto VARCHAR2(20) NOT NULL
);

ALTER TABLE t_invto_ds ADD CONSTRAINT t_invto_ds_pk PRIMARY KEY ( cd_invto );

ALTER TABLE t_invto_ds ADD CONSTRAINT un_invto_ds_ds_invto UNIQUE ( ds_invto );

CREATE TABLE t_meta (
    id_meta          NUMBER(3) NOT NULL,
    t_usuario_nr_cpf NUMBER(11) NOT NULL,
    ds_meta          VARCHAR2(60) NOT NULL,
    ds_valor         NUMBER(10, 2) NOT NULL,
    dt_inicio        DATE NOT NULL,
    dt_termino       DATE
);

ALTER TABLE t_meta ADD CONSTRAINT t_meta_pk PRIMARY KEY ( id_meta );

CREATE TABLE t_mov (
    id_mov               NUMBER(5) NOT NULL,
    t_usuario_nr_cpf     NUMBER(11) NOT NULL,
    t_tpo_mov_cd_tpo_mov NUMBER(2) NOT NULL,
    t_ctg_mov_cd_ctg_mov NUMBER(2) NOT NULL,
    ds_mov               VARCHAR2(50) NOT NULL,
    dt_data              DATE NOT NULL,
    ds_valor             NUMBER(10, 2) NOT NULL
);

ALTER TABLE t_mov ADD CONSTRAINT t_mov_pk PRIMARY KEY ( id_mov );

CREATE TABLE t_tpo_mov (
    cd_tpo_mov NUMBER(2) NOT NULL,
    ds_tpo_mov VARCHAR2(30) NOT NULL
);

ALTER TABLE t_tpo_mov ADD CONSTRAINT t_tpo_mov_pk PRIMARY KEY ( cd_tpo_mov );

ALTER TABLE t_tpo_mov ADD CONSTRAINT un_tpo_mov_ds_tpo_mov UNIQUE ( ds_tpo_mov );

CREATE TABLE t_usuario (
    nr_cpf        NUMBER(11) NOT NULL,
    ds_email      VARCHAR2(60) NOT NULL,
    nm_usuario    VARCHAR2(15) NOT NULL,
    ds_senha      VARCHAR2(12) NOT NULL,
    dt_nascimento DATE,
    nm_pessoa     VARCHAR2(50) NOT NULL
);

ALTER TABLE t_usuario ADD CONSTRAINT t_usuario_pk PRIMARY KEY ( nr_cpf );

ALTER TABLE t_usuario ADD CONSTRAINT un_usuario_ds_email UNIQUE ( ds_email );

ALTER TABLE t_usuario ADD CONSTRAINT un_usuario_nm_usuario UNIQUE ( nm_usuario );

ALTER TABLE t_invto
    ADD CONSTRAINT t_invto_t_invto_ds_fk FOREIGN KEY ( t_invto_ds_cd_invto )
        REFERENCES t_invto_ds ( cd_invto );

ALTER TABLE t_invto
    ADD CONSTRAINT t_invto_t_usuario_fk FOREIGN KEY ( t_usuario_nr_cpf )
        REFERENCES t_usuario ( nr_cpf );

ALTER TABLE t_meta
    ADD CONSTRAINT t_meta_t_usuario_fk FOREIGN KEY ( t_usuario_nr_cpf )
        REFERENCES t_usuario ( nr_cpf );

ALTER TABLE t_mov
    ADD CONSTRAINT t_mov_t_ctg_mov_fk FOREIGN KEY ( t_ctg_mov_cd_ctg_mov )
        REFERENCES t_ctg_mov ( cd_ctg_mov );

ALTER TABLE t_mov
    ADD CONSTRAINT t_mov_t_tpo_mov_fk FOREIGN KEY ( t_tpo_mov_cd_tpo_mov )
        REFERENCES t_tpo_mov ( cd_tpo_mov );

ALTER TABLE t_mov
    ADD CONSTRAINT t_mov_t_usuario_fk FOREIGN KEY ( t_usuario_nr_cpf )
        REFERENCES t_usuario ( nr_cpf );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


*/